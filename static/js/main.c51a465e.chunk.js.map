{"version":3,"sources":["layout/header.jsx","layout/footer.jsx","components/search/search.jsx","components/search/index.js","components/radio/radio.jsx","components/radio/index.js","components/forms/forms.jsx","components/forms/index.js","components/preloader/preloader.js","components/moviesList/moviesList.jsx","components/moviesList/index.js","services/movies-service.js","layout/Main.jsx","components/app/index.js","components/app/app.jsx","index.js"],"names":["Header","className","href","id","Footer","Date","getFullYear","Search","props","onSearch","event","toPutNameToSearch","value","target","setState","search","type","onPushEnter","code","buttonClick","nodeName","toSearch","state","focusRef","React","createRef","this","current","focus","Component","View","placeholder","onChange","onKeyDown","ref","onClick","Radio","genre","onChangeRadio","toPutTypeToSearch","name","valueToState","checked","Forms","test","Preloader","MoviesList","moviesList","length","map","item","title","Title","year","Year","imdbID","Type","poster","Poster","src","alt","MoviesService","_apiBase","process","urlName","urlType","a","fetch","response","ok","Error","status","json","movieTitle","getResource","movieId","Main","getData","dataForMovies","getMoviesList","then","catch","error","console","loading","nameForURL","typeForURL","bind","url","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c51a465e.chunk.js","sourcesContent":["const Header = () => {\n    return(\n        <nav className='green darken-3'>\n            <div className=\"nav-wrapper\">\n                <a href=\"!#\" className=\"brand-logo\">React Movies</a>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><a href=\"!#\">Repo</a></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header;","const Footer = () => {\n    return(\n        <footer className=\"page-footer green lighten-1\">\n            <div className=\"footer-copyright\">\n                <div className=\"container\">\n                    © {new Date().getFullYear()} Copyright\n                    <a className=\"grey-text text-lighten-4 right\" href=\"#!\">Repo</a>\n                </div>\n            </div>\n        </footer>\n    )\n};\n\nexport default Footer;","import React, {Component} from \"react\";\nimport './search.css'\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: ''\n        }\n\n        this.focusRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // фокус в строке поиска при отрисовке компонента\n        this.focusRef.current.focus();\n    }\n\n    onSearch = (event) => {\n        const {toPutNameToSearch} = this.props;\n\n        // получаем данные из импута\n        const {value} = event.target;\n\n        this.setState({\n            search: value\n        })\n\n        let type = value;\n        if (value === '') type = 'all';\n\n        toPutNameToSearch(type)\n    }\n\n    onPushEnter = (event) => {\n        // получить код нажатой клавиши\n        const {code} = event;\n        const buttonClick = event.target.nodeName;\n\n        const {toSearch} = this.props;\n\n        if (code === 'Enter' || buttonClick === 'BUTTON') toSearch();\n    }\n\n    render() {\n        const {search} = this.state;\n\n        return(\n            <View\n                search={search}\n                onSearch={this.onSearch}\n                onPushEnter={this.onPushEnter}\n                focusRef={this.focusRef}\n            />\n        )\n    }\n}\n\nconst View = ({search, onSearch, onPushEnter, focusRef}) => {\n    return(\n        <div className=\"row movie__search\">\n            <div className=\"input-field\">\n                <input\n                    className=\"validate\"\n                    placeholder='search'\n                    type=\"search\"\n                    value={search}\n                    onChange={onSearch}\n                    onKeyDown={onPushEnter}\n                    ref={focusRef}\n                />\n\n                <button\n                    className='btn search__btn'\n                    onClick={onPushEnter}\n                >Search</button>\n            </div>\n        </div>\n    )\n}","import Search from \"./search\";\nexport default Search;","import React, {Component} from \"react\";\nimport './radio.css'\n\nexport default class Radio extends Component {\n    state = {\n        genre: ''\n    }\n\n    onChangeRadio = (event) => {\n        const {toPutTypeToSearch} = this.props;\n        const {name, value} = event.target;\n        let valueToState = value;\n\n        this.setState({\n            [name]: valueToState\n        });\n\n        let type = value;\n        if (value === 'all') type = null;\n\n        toPutTypeToSearch(type);\n    };\n\n    render() {\n        const {genre} = this.state\n\n        return(\n            <View\n                genre={genre}\n                onChangeRadio={this.onChangeRadio}\n            />\n        )\n    }\n}\n\nconst View = ({genre, onChangeRadio}) => {\n    return(\n        <form className='movie__radio'>\n            <p>\n                <label>\n                    <input\n                        name=\"genre\"\n                        type=\"radio\"\n                        checked={genre === '' || genre === 'all'}\n                        value='all'\n                        className='with-gap'\n                        onChange={onChangeRadio}\n                    />\n                    <span>All</span>\n                </label>\n            </p>\n            <p>\n                <label>\n                    <input\n                        name=\"genre\"\n                        type=\"radio\"\n                        checked={genre === 'movie'}\n                        value='movie'\n                        className='with-gap'\n                        onChange={onChangeRadio}\n                    />\n                    <span>Movie</span>\n                </label>\n            </p>\n            <p>\n                <label>\n                    <input\n                        name=\"genre\"\n                        type=\"radio\"\n                        checked={genre === 'series'}\n                        value='series'\n                        className='with-gap'\n                        onChange={onChangeRadio}\n                    />\n                    <span>Series</span>\n                </label>\n            </p>\n        </form>\n    )\n}","import Radio from \"./radio\";\nexport default Radio;","import React, {Component} from \"react\";\nimport Search from \"../search\";\nimport Radio from \"../radio\";\n\nexport default class Forms extends Component {\n    state = {\n        test: null,\n        focus: true\n    }\n\n    render() {\n        const {toPutNameToSearch, toPutTypeToSearch, toSearch} = this.props\n        return(\n            <>\n                <Search\n                    toPutNameToSearch={toPutNameToSearch}\n                    toSearch={toSearch}\n                />\n                <Radio\n                    toPutTypeToSearch={toPutTypeToSearch}\n                />\n            </>\n        )\n    }\n}","import Forms from \"./forms\";\nexport default Forms;","import './preloader.css'\n\nconst Preloader = () => {\n    return(\n        <div className=\"progress\">\n            <div className=\"indeterminate\"></div>\n        </div>\n    )\n};\n\nexport default Preloader;","import React, {Component} from \"react\";\nimport './moviesList.css';\n// import MovieItem from \"../movieItem\";\nimport Preloader from \"../preloader/preloader\";\n\nexport default class MoviesList extends Component{\n    render() {\n        // По умолчанию moviesList = [] для того чтобы отрисовывать <h4>Nothing found</h4>\n        const {moviesList = []} = this.props;\n\n        if (!moviesList) return <Preloader/>;\n\n        return(\n            <div className='moviesList'>\n                {moviesList.length ? View(moviesList) : <h4>Nothing found</h4>}\n            </div>\n        )\n    }\n};\n\nconst View = (moviesList) => {\n    return(\n        moviesList.map(item => {\n            const {\n                Title: title,\n                Year: year,\n                imdbID: id,\n                Type: type,\n                Poster: poster\n            } = item;\n\n            return (\n                <div key={id} id={id} className=\"card movieItem\">\n                    <div className=\"card-image waves-effect waves-block waves-light\">\n                        {\n                            poster === 'N/A' ?\n                                <img className=\"activator\" src={`https://via.placeholder.com/300x400?text=${title}`} alt={title} />\n                                :\n                                <img className=\"activator\" src={poster} alt={title} />\n                        }\n                    </div>\n                    <div className=\"card-content\">\n                        <span className=\"card-title activator grey-text text-darken-4\">{title}</span>\n                        <p>\n                            {year}\n                            <span className='right'>{type}</span>\n                        </p>\n                    </div>\n                </div>\n            )\n        })\n    )\n};","import MoviesList from \"./moviesList\";\nexport default MoviesList;","const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport default class MoviesService {\n    _apiBase = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\n    async getResource(urlName, urlType) {\n        const response = await fetch(`${this._apiBase}&s=${urlName}&type=${urlType}`);\n\n        if (!response.ok){\n            throw new Error(`Could not fetch ${urlName}, received ${response.status}`);\n        }\n\n        return await response.json();\n    }\n\n    async getMoviesList(movieTitle, type) {\n        return await this.getResource(movieTitle, type)\n    }\n\n    async getMovieDetails(movieId) {\n        return await this.getResource(`i=${movieId}&plot=full`)\n    }\n}","import React, {Component} from \"react\";\nimport Forms from \"../components/forms\";\nimport MoviesList from \"../components/moviesList\";\nimport Preloader from \"../components/preloader/preloader\";\nimport './layout.css';\nimport MoviesService from \"../services/movies-service\";\n\nexport default class Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            moviesList: null,\n            nameForURL: 'all',\n            typeForURL: null\n        }\n\n        this.toSearch = this.toSearch.bind(this);\n        this.toPutNameToSearch = this.toPutNameToSearch.bind(this);\n        this.toPutTypeToSearch = this.toPutTypeToSearch.bind(this);\n    }\n\n    getData = new MoviesService();\n\n    componentDidMount() {\n        const {nameForURL, typeForURL} = this.state;\n        this.dataForMovies(nameForURL, typeForURL)\n\n        this.setState({\n            loading: false\n        })\n    }\n\n    dataForMovies = (name, type) => {\n        this.getData.getMoviesList(name, type)\n            .then(response => {\n                this.setState({\n                    moviesList: response.Search\n                })\n            })\n            .catch(error => {\n                console.error(error);\n\n                this.setState({\n                    loading: false\n                })\n            });\n    }\n\n    // Записать в state название фильма из строки поиска для формирования запроса get\n    // Берет Тип фильма из State а название из Компонента Search из строки поиска\n    // Вызывает функцию dataForMovies для обработки запроса get\n    toPutNameToSearch(url) {\n        this.setState({\n            loading: true\n        })\n\n        const {typeForURL} = this.state;\n\n        this.setState({\n            nameForURL: url\n        })\n\n        this.dataForMovies(url, typeForURL)\n\n        this.setState({\n            loading: false\n        })\n    }\n\n    // Записать в state тип фильма из строки поиска для формирования запроса get\n    // Берет Тип название из State а тип из Компонента Radio из строки поиска\n    // Вызывает функцию dataForMovies для обработки запроса get\n    toPutTypeToSearch(type) {\n        this.setState({\n            loading: true\n        })\n\n        const {nameForURL} = this.state;\n\n        this.setState({\n            typeForURL: type\n        })\n\n        this.dataForMovies(nameForURL, type)\n\n        this.setState({\n            loading: false\n        })\n    }\n\n    // Вызовет dataForMovies при нажатии кнопки Search или нажатии клавиши Enter\n    // По сути бесполезный метод тк toPutTypeToSearch и toPutNameToSearch делает это автоматически\n    toSearch() {\n        this.setState({\n            loading: true\n        })\n\n        const {nameForURL, typeForURL} = this.state;\n        this.dataForMovies(nameForURL, typeForURL);\n\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const {loading, moviesList} = this.state;\n\n        return(\n            <>\n                <main className='container content'>\n                    <div className=\"main__preloader\">\n                        {loading ? <Preloader/> : null}\n                    </div>\n\n                    <Forms\n                        toPutNameToSearch={this.toPutNameToSearch}\n                        toPutTypeToSearch={this.toPutTypeToSearch}\n                        toSearch={this.toSearch}\n                    />\n\n                    {\n                        loading ? <Preloader /> : <MoviesList moviesList={moviesList}/>\n                    }\n                </main>\n            </>\n        )\n    }\n};","import App from \"./app\";\nexport default App;","import React from \"react\";\nimport {Header, Main, Footer} from \"../../layout\";\n\nconst App = () => {\n    return (\n        <>\n            <Header />\n            <Main />\n            <Footer />\n        </>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}